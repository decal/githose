#!/usr/bin/env bash
#
# Download _copies_ of all user's gists from GitHub API
#
# Derek Callaway <decal {AT} sdf {D0T} org>
#
# Thu Nov  3 10:43:36 EDT 2016
#

# set -x

# store teh gist of teh gists here..
declare -xr GIST_PATH_COPY="$HOME/gists"
# wget wait seconds
declare -ir GIST_WGET_WAIT=22
# GNU parallel's degree of multi-tasking
declare -ir GIST_TASK_JOBS=8
# get out my homedir numbnutz :)
declare -ir GIST_MODE_MASK=0027
# read/write/exec for owner only plz
declare -ir GIST_MODE_DIRS=0700

### [!] DONT EDIT ANYTHING BELOW HERE [!] ###

source -- ../../inc/colors
umask -- $GIST_MODE_MASK

if [ ! $1 ]
  then echo
  echo "usage: $0 USER"
  echo '  USER  case-sensitive GitHub user name string'
  echo 
  echo "ex. $0 decal"
  echo

  exit 1
fi

readonly gitUser="$1"

function errx_show() {
  echo -n -- "$1: " 

  errno -- $2 | tail -n 1 

  return 0
}

function errx_exit() {
  readonly reposPath=$(realpath $3)

  echo -n -- "$1: " 

  [ "$reposPath" ] && echo -n "${reposPath} "

  errno  -- $2 | tail -n 1

  exit -- $2
}

if [ ! -d $GIST_PATH_COPY ] 
  then mkdir -- "$(realpath $GIST_PATH_COPY)" 2>/dev/null

  [ $? -ne 0 ] && errx_show 'mkdir' $? $GIST_PATH_COPY
fi

chmod $GIST_MODE_DIRS -- $GIST_PATH_COPY 2>/dev/null

[ $? -ne 0 ] && errx_show 'chmod' $?

cd -- ${GIST_PATH_COPY}

if [ ! -d $gitUser ]
  then mkdir -- $gitUser

  [ $? -ne 0 ] && errx_exit 'mkdir' $? $gitUser

  chmod $GIST_MODE_DIRS -- $gitUser 2>/dev/null

  [ $? -ne 0 ] && errx_show 'chmod' $?
fi

cd -- $gitUser

declare -xi waresDaWarez=0

while true
  do waresDaWarez=$(( 1 + waresDaWarez ))
  declare outputStr=$( curl -sk "https://api.github.com/users/${gitUser}/gists" 2>&1 )

  if [ ! "$outputStr" ] 
    then echo "$0: No output received from GitHub API!"

    exit 2
  fi

  if [ "`echo "$outputStr" | grep 'ate limit'`" ]
    then echo "$0: GitHub API key's rate limit exceeded (try again later)"

    exit 3 
  fi

  declare -a gist_code_urls=$( echo "$outputStr" | grep '"raw_url": "' | grep "/${gitUser}/" | cut -d \" -f4 )

  [ $? -ne 0 ] && errx_show 'git' $?

  if [ ${#gist_code_urls} -eq 0 ]
    then echo "$0: Received output from GitHub API, but no repository references ?"
    echo "$0: Are you sure you entered the correct username ?"
    echo "$0: There must be repositories at https://github.com/${gitUser} !"

    exit 4
  fi
 
  which parallel |&> /dev/null 

  if [ $? -eq 0 ]
    then parallel -j${GIST_TASK_JOBS} nice wget -k -nd -nc -N --backups=2 --restrict-file-names=ascii --progress=bar --retry-connrefused --random-wait --timeout=${GIST_WGET_WAIT} {1} ::: ${gist_code_urls[*]}
  else
    declare -i acnt=0

    for one in ${gist_code_urls[*]}
      do acnt=$(( $acnt + 1 ))

      nice wget -k -nd -nc -N --backups=2 --restrict-file-names=ascii --progress-bar --retry-connrefused --random-wait --timeout=${GIST_WGET_WAIT} &
    done

    for two in `seq 1 $acnt`
      do wait $two
    done
  fi

  break
done

exit 0
